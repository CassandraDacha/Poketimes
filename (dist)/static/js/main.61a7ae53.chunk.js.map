{"version":3,"sources":["pokeball.png","components/Navbar.js","components/Home.js","components/About.js","components/Contact.js","components/Post.js","actions/postActions.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["module","exports","withRouter","props","className","to","exact","Home","posts","this","postList","length","map","post","key","id","src","Pokeball","alt","title","body","Component","connect","state","About","Contact","Post","handleClick","deletePost","history","push","onClick","ownProps","match","params","post_id","find","dispatch","type","App","path","component","Boolean","window","location","hostname","initState","rootReducer","action","console","log","newPosts","filter","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61a7ae53.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball.f10bf078.png\";","  \r\nimport React from 'react';\r\nimport { Link, NavLink, withRouter } from 'react-router-dom'\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <nav className=\"nav-wrapper red darken-3\">\r\n      <div className=\"container\">\r\n        <Link className=\"brand-logo\" to=\"/\">Poke' Times</Link>\r\n        <ul className=\"right\">\r\n          <li><NavLink exact to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to='/about'>About</NavLink></li>\r\n          <li><NavLink to='/contact'>Contact</NavLink></li>\r\n        </ul>\r\n      </div>\r\n    </nav> \r\n  )\r\n}\r\nexport default withRouter(Navbar)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Pokeball from '../pokeball.png'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Home extends Component {\r\n  render(){\r\n    const { posts } = this.props\r\n    const postList = posts.length ? (\r\n      posts.map(post => {\r\n        return (\r\n          <div className=\"post card\" key={post.id}>\r\n            <img src={Pokeball} alt=\"A Pokeball\" />\r\n            <div className=\"card-content\">\r\n              <Link to={'/' + post.id}>\r\n                <span className=\"card-title red-text\">{post.title}</span>\r\n              </Link>\r\n              <p>{post.body}</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    ) : (\r\n      <div className=\"center\">No posts to show</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"container home\">\r\n          <h4 className=\"center\">Home</h4>\r\n          {postList}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.posts\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h4 className=\"center\">About</h4>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae repudiandae repellat illo magni eligendi cupiditate voluptates eius nam voluptate. Incidunt nihil ullam quae quia officia quaerat, deserunt eligendi explicabo totam?</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import React from 'react'\r\n\r\nconst Contact = (props) => {\r\n  // console.log(props);\r\n  // setTimeout(() => {\r\n  //   props.history.push('/about');\r\n  // }, 2000);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h4 className=\"center\">Contact</h4>\r\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Recusandae repudiandae repellat illo magni eligendi cupiditate voluptates eius nam voluptate. Incidunt nihil ullam quae quia officia quaerat, deserunt eligendi explicabo totam?</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deletePost } from '../actions/postActions'\r\n\r\nclass Post extends Component {\r\n  handleClick = () => {\r\n    this.props.deletePost(this.props.post.id);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n\r\n    const post = this.props.post ? (\r\n      <div className=\"post\">\r\n        <h4 className=\"center\">{this.props.post.title}</h4>\r\n        <p>{this.props.post.body}</p>\r\n        <div className=\"center\">\r\n          <button className=\"btn grey\" onClick={this.handleClick}>\r\n            Delete Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div className=\"center\">Loading post...</div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {post}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let id = ownProps.match.params.post_id;\r\n  return {\r\n    post: state.posts.find(post => post.id === id)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deletePost: (id) => dispatch(deletePost(id))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)","export const deletePost = (id) => {\r\n    return {\r\n      type: 'DELETE_POST',\r\n      id\r\n    }\r\n  }","import React, { Component } from 'react';\nimport Navbar from './components/Navbar'\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport Home from './components/Home'\nimport About from './components/About'\nimport Contact from './components/Contact'\nimport Post from './components/Post'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route path='/about' component={About} />\n            <Route path='/contact' component={Contact} />\n            <Route path='/:post_id' component={Post} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    posts: [\r\n      {id: '1', title: 'Squirtle Laid an Egg', body: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequatur voluptate laborum perferendis, enim repellendus ipsam sunt autem at odit dolorum, voluptatum suscipit iste harum cum magni itaque animi laudantium fugiat'},\r\n      {id: '2', title: 'Charmander Laid an Egg', body: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequatur voluptate laborum perferendis, enim repellendus ipsam sunt autem at odit dolorum, voluptatum suscipit iste harum cum magni itaque animi laudantium fugiat'},\r\n      {id: '3', title: 'a Helix Fossil was Found', body: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequatur voluptate laborum perferendis, enim repellendus ipsam sunt autem at odit dolorum, voluptatum suscipit iste harum cum magni itaque animi laudantium fugiat'}\r\n    ]\r\n  }\r\n  \r\n  \r\n  \r\n  const rootReducer = (state = initState, action) => {\r\n    console.log(action);\r\n    if(action.type === 'DELETE_POST'){\r\n     let newPosts = state.posts.filter(post => {\r\n       return post.id !== action.id\r\n     });\r\n     return {\r\n       ...state,\r\n       posts: newPosts\r\n     }\r\n    }\r\n    return state;\r\n  }\r\n  \r\n  export default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}